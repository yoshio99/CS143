#!/usr/bin/env bash
ZIP_FILE=project5.zip
REQUIRED_FILES="bookPairs.py"
OPTIONAL_FILES="README.txt"
DATA_FILE="/home/cs143/data/goodreads.user.books"

TMP_NAME=project5
TMP_DIR=/tmp/${TMP_NAME}
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

#error function
function error_exit()
{
   echo -e "ERROR: $1" 1>&2
   rm -rf ${TMP_DIR}
   exit 1
}

# make sure running in container
if [ `whoami` != "cs143" ]; then
    error_exit "You need to run this script within the container"
fi

# clean any existing files
rm -rf ${TMP_DIR}
mkdir ${TMP_DIR}

# change to the container contains this script
cd ${DIR}


# check file existence
if [ -f ${ZIP_FILE} ]; then
    rm -f ${ZIP_FILE}
fi

# check the existence of the required files
for FILE in ${REQUIRED_FILES}
do
    if [ ! -f ${FILE} ]; then
        echo "ERROR: Cannot find ${FILE} in ${DIR}" 1>&2
        exit 1
    fi
done

# check the existence of the optional files
TO_ADD=""
for FILE in ${OPTIONAL_FILES}
do
    if [ -f ${FILE} ]; then
	TO_ADD+=" ${FILE}"
    fi
done

# check if the data file is referenced in bookPairs.py
grep ${DATA_FILE} bookPairs.py &> /dev/null
if [ $? -ne 0 ]; then
    echo "WARNING: The path ${DATA_FILE} is not referenced in bookPairs.py."
    echo "         Are you sure you are using the correct path?"
fi

echo "zip ${ZIP_FILE} ${REQUIRED_FILES} ${TO_ADD}"
zip ${ZIP_FILE} ${REQUIRED_FILES} ${TO_ADD}
if [ $? -ne 0 ]; then
    error_exit "Create ${ZIP_FILE} failed, check for error messages in console."
fi

echo "[SUCCESS] Created '$DIR/${ZIP_FILE}'"

exit 0
lines = sc.textFile("../data/goodreads.1000")
words = lines.flatMap(lambda line: line.split(" "))
word1s = words.map(lambda word: (word, 1))
wordCounts = word1s.reduceByKey(lambda a, b: a+b)
wordCounts.saveAsTextFile("output")
'''

''
# the main map-reduce task
lines = sc.textFile("../data/goodreads.1000")
words = lines.flatMap(lambda line: line.split(" "))
word1s = words.map(lambda word: (word, 1))
wordCounts = word1s.reduceByKey(lambda a, b: a+b)
wordCounts.saveAsTextFile("output")
'''


